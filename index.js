// Generated by CoffeeScript 1.10.0
(function() {
  var FacebookButton, HatenaBookmark, PocketButton, TweetButton, htmlTag, jade, rMeta, rUrl, util;

  util = require('hexo-util');

  htmlTag = util.html_tag;

  rUrl = /((([A-Za-z]{3,9}:(?:\/\/)?)(?:[-;:&=\+\$,\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\+\$,\w]+@)[A-Za-z0-9.-]+)((?:\/[\+~%\/.\w-_]*)?\??(?:[-\+=&;%@.\w_]*)#?(?:[.\!\/\\w]*))?)/;

  rMeta = /["']?([^"']+)?["']?\s*["']?([^"']+)?["']?/;

  jade = require('jade');

  HatenaBookmark = (function() {
    HatenaBookmark.prototype.TYPES = {
      SMALL: "simple",
      LARGE: "standard"
    };

    HatenaBookmark.prototype.DISPLAY_TYPES = {
      VISIBLE: "balloon",
      UNVISIBLE: "noballoon",
      VERTICAL: "vertical-balloon"
    };

    HatenaBookmark.prototype.LANGS = {
      JA: "ja",
      EN: "en"
    };

    function HatenaBookmark(arg) {
      this.type = arg.type, this.display_type = arg.display_type, this.lang = arg.lang, this.title = arg.title, this.url = arg.url;
      if (!this.type) {
        this.type = this.TYPES.LARGE;
      }
      if (!this.display_type) {
        this.layout = this.display_type = this.DISPLAY_TYPES.VERTICAL;
      }
      if (this.display_type !== this.DISPLAY_TYPES.VERTICAL) {
        this.layout = this.type + "-" + this.display_type;
      }
      if (!this.lang) {
        this.lang = this.LANGS.JA;
      }
    }

    HatenaBookmark.prototype.getHtmlCode = function() {
      var fn;
      fn = jade.compileFile(__dirname + "/templates/hatena_bookmark_button.jade", {});
      return fn({
        display_type: this.display_type,
        layout: this.layout,
        lang: this.lang,
        type: this.type
      });
    };

    return HatenaBookmark;

  })();

  TweetButton = (function() {
    TweetButton.prototype.TYPES = {
      SHARE: 1,
      FOLLOW: 2,
      HASHTAGS: 3,
      TWEET: 4
    };

    TweetButton.prototype.COUNT_TYPES = {
      NONE: 'none',
      HORIZONTAL: 'horizontal',
      VERTICAL: 'vertical'
    };

    function TweetButton(arg) {
      this.type = arg.type, this.username = arg.username, this.recommend_username = arg.recommend_username, this.hashtag = arg.hashtag, this.size = arg.size, this.count = arg.count, this.lang = arg.lang, this.via = arg.via;
      if (!this.type) {
        this.type = this.TYPES.SHARE;
      }
      this.lang = 'en';
      if (!this.count) {
        this.count = this.COUNT_TYPES.VERTICAL;
      }
    }

    TweetButton.prototype.getHtmlCode = function() {
      var fn;
      fn = jade.compileFile(__dirname + "/templates/tweet_button.jade", {});
      return fn({
        count: this.count,
        lang: this.lang
      });
    };

    return TweetButton;

  })();

  FacebookButton = (function() {
    FacebookButton.prototype.LAYOUTS = {
      STANDARD: 1,
      BOX_COUNT: 'box_count',
      BUTTON_COUNT: 3,
      BUTTON: 4
    };

    FacebookButton.prototype.ACTIONS = {
      LIKE: 'like',
      RECOMEND: 'recommended'
    };

    function FacebookButton(arg) {
      this.layout = arg.layout, this.action = arg.action, this.is_show_faces = arg.is_show_faces;
      if (!this.layout) {
        this.layout = this.LAYOUTS.BOX_COUNT;
      }
      if (!this.action) {
        this.action = this.ACTIONS.LIKE;
      }
    }

    FacebookButton.prototype.getHtmlCode = function() {
      var fn;
      fn = jade.compileFile(__dirname + "/templates/facebook_like_button.jade", {});
      return fn({
        layout: this.layout,
        action: this.action
      });
    };

    return FacebookButton;

  })();

  PocketButton = (function() {
    function PocketButton() {}

    PocketButton.prototype.getHtmlCode = function() {
      var fn;
      fn = jade.compileFile(__dirname + "/templates/pocket_button.jade", {});
      return fn();
    };

    return PocketButton;

  })();

  hexo.extend.tag.register('social', function(args, content) {
    var fb, fn, hb, pt, tw;
    hb = new HatenaBookmark({});
    tw = new TweetButton({});
    fb = new FacebookButton({});
    pt = new PocketButton({});
    fn = jade.compileFile(__dirname + "/templates/layout.jade", {});
    return fn({
      hb: hb.getHtmlCode(),
      tw: tw.getHtmlCode(),
      fb: fb.getHtmlCode(),
      pt: pt.getHtmlCode()
    });
  });

}).call(this);
